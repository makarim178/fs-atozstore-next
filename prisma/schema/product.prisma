model Product {
  id                     String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sku                    String         @unique
  name                   String
  description            String?
  category_id            String         @db.Uuid
  brand_id               String         @db.Uuid
  price                  Decimal        @db.Decimal(10, 2)
  discount_percentage    Decimal?       @db.Decimal(10, 2)
  rating                 Decimal?       @db.Decimal(10, 2)
  stock                  Int
  warranty_information   String?
  shipping_information   String?
  return_policy          String?
  minimum_order_quantity Int?
  isAvailable            Boolean?       @default(true)
  thumbnail              String?
  created_at             DateTime?      @default(now()) @db.Timestamptz(6)
  cart_items             CartItem[]
  images                 Image[]
  meta                   Meta?
  order_items            OrderItem[]
  brand                  Brand          @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  category               Category       @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reviews                Review[]
  tags                   Tag[]
  unit_dimension         UnitDimension?
}

model Image {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id String  @db.Uuid
  url        String
  product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Review {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id String    @db.Uuid
  rating     Decimal   @db.Decimal(10, 2)
  comment    String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  product    Product   @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model UnitDimension {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id String  @unique @db.Uuid
  weight     Decimal @db.Decimal(10, 2)
  unit       String  @default("kg")
  height     Decimal @db.Decimal(10, 2)
  width      Decimal @db.Decimal(10, 2)
  depth      Decimal @db.Decimal(10, 2)
  product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

model Tag {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  product_id String  @db.Uuid
  product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

model Meta {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  barcode    String?
  qrcode     String?
  product_id String    @unique @db.Uuid
  product    Product   @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

model Category {
  id       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String
  products Product[]
}

model Brand {
  id       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String
  products Product[]
}
