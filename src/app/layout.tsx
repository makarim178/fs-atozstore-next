import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { HeaderComponent } from "@/components/layouts/Header";
import { ThemeProvider } from "@/providers/theme-provider";
import Footer from "@/components/layouts/Footer";
import { productService } from "@/services/product.services";
import { DEFAULT_SEARCH_QUERY } from "@/constants/requestTypes";
import { ProductProvider } from "../providers/products-provider";

import { CookiesProvider } from "next-client-cookies/server";
import CartProvider from "../providers/cart-provider";
import { CartServices } from "@/services/cart.services";
import { UUID } from "crypto";
import "./globals.css";
import { handleInitialSession } from "@/lib/session";
import { cookies } from "next/headers";
import { SESSION_KEY } from "@/constants/common";
import { NextAuthProvider } from "@/providers/session-provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies()
  const session = (await cookieStore).get(SESSION_KEY)
  let sessionId

  if (session && session?.value !== 'undefined') sessionId = session.value
  
  const productResponse = await productService.searchProduct(DEFAULT_SEARCH_QUERY)
  if (!productResponse) return <div className="flex items-center justify-center">Loading...</div>

  const cartResponse = await handleInitialSession(sessionId as UUID)
  if (!cartResponse) return <div className="flex items-center justify-center">Could not generate Cart...</div>

  return (
    <html lang="en" className={`${geistSans.variable} ${geistMono.variable} antialiased`} suppressHydrationWarning={true}>
          <body className="flex flex-col min-h-screen justify-around">
            <NextAuthProvider>
              <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
                <ProductProvider initialData={productResponse}>
                  <CookiesProvider>
                    <CartProvider cartData={cartResponse}>
                      <HeaderComponent />
                      <main className='pb-4 px-12 mt-20 flex-grow'>
                        {children}
                      </main>
                    </CartProvider>
                  </CookiesProvider>
                </ProductProvider>
              </ThemeProvider>
              <Footer />
            </NextAuthProvider>
          </body>
    </html>
  );
}
